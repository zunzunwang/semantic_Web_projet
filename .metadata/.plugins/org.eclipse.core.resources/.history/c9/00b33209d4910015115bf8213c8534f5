package semweb;

import java.rmi.RemoteException;
import java.util.Collection;
import java.util.HashSet;

import org.semarglproject.jena.rdf.rdfa.JenaRdfaReader;

import com.hp.hpl.jena.rdf.model.Model;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.RDFNode;
import com.hp.hpl.jena.rdf.model.Resource;
import com.hp.hpl.jena.rdf.model.StmtIterator;
import com.hp.hpl.jena.vocabulary.RDF;

public class PersonExtractor extends  RDFExtractor  {
	protected PersonExtractor() throws RemoteException {
		super();
		// TODO Auto-generated constructor stub
	}

	@Override
	public RDFNode primaryTopic(String iri) {
		// TODO Auto-generated method stub
		JenaRdfaReader.inject();
		Model m = ModelFactory.createDefaultModel();;
		RDFNode primaryTopic = null;
		String foaf ="http://xmlns.com/foaf/0.1/";
		m.setNsPrefix("foaf",foaf);
		
		
		try {
			m = ModelFactory.createDefaultModel();
			m.read(iri,"TTL");			
		} catch ( org.apache.jena.riot.RiotException e) {
			// TODO Auto-generated catch block			
			try {
				m = ModelFactory.createDefaultModel();
				m.read(iri,"RDF/XML");				
				} catch ( org.apache.jena.riot.RiotException a) {
					// TODO Auto-generated catch block
					try {
						m = ModelFactory.createDefaultModel();
						m.read(iri,"RDFA");	
						} catch ( org.apache.jena.riot.RiotException c) {
							c.printStackTrace();							
						}
					}
			}finally{
//				m.write(System.out);
			}
		Resource subject = m.createResource(iri);
		Property predicate = model.createProperty(foaf+"primaryTopic");

		StmtIterator iter = m.listStatements(subject,predicate,(RDFNode)null );
		if (iter.hasNext()) {
			System.out.println("The model contains primaryTopic");
			 while (iter.hasNext()) {
				 primaryTopic = iter.nextStatement().getObject();
				 System.out.println(primaryTopic.toString());			
			 }
			 
		}else {
            System.out.println("No primaryTopic were found in the model");
        }
		return primaryTopic;		 
	}


}
